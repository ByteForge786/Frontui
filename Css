st.markdown("""
<style>
.scrollable-container {
    height: 600px;
    overflow-y: auto;
    border: 1px solid #ccc;
    padding: 10px;
}
</style>
""", unsafe_allow_html=True)


def main():
    init_app()

    st.markdown('## NeuroFlake: AI-Powered Data Insights for Snowflake')

    left_column, right_column = st.columns(2, gap="large")

    with left_column:
        st.markdown("""
        NhanceBot is an AI-powered Data Insight tool designed to help you interact with your Snowflake data warehouse using natural language.

        - **Ask in Plain English**: No need for complex query languages - just ask questions as you normally would.
        - **Instant Answers**: Get the information you need in seconds, without waiting for the IT department.
        - **User-Friendly for Everyone**: From executives to analysts, everyone can now access data insights easily.
        - **Save Time and Resources**: Focus on making decisions, not on figuring out how to get the data.
        - **NhanceBot Gets Smarter with Use**: The more you use NhanceBot, the better it understands your business needs.
        
        Let's explore your data together!
        """)
        
        st.markdown('##### Sample Data Schema:')
        data = {
            'Table': ['CUSTOMERS', 'ORDERS', 'PRODUCTS', 'SALES'],
            'Columns': [
                'customer_id, name, email, segment',
                'order_id, customer_id, order_date, total_amount',
                'product_id, name, category, price',
                'sale_id, product_id, quantity, revenue'
            ]
        }
        df = pd.DataFrame(data)
        
        st.dataframe(df, height=500, use_container_width=True)

    with right_column:
        st.markdown('<div class="scrollable-container">', unsafe_allow_html=True)
        
        # Display chat history
        for entry in st.session_state['chat_history']:
            with st.chat_message(name="user", avatar="user"):
                st.markdown(entry['question'])
            with st.chat_message(name="assistant", avatar="assistant"):
                st.code(entry['sql_query'], language="sql")
                st.dataframe(entry['result'])

        with st.chat_message(name="user", avatar="user"):
            user_input_placeholder = st.empty()
        with st.chat_message(name="assistant", avatar="assistant"):
            bot_response_1_placeholder = st.empty()
            bot_response_2_placeholder = st.empty()

        st.markdown('</div>', unsafe_allow_html=True)

        user_input = st.text_area("Enter your question about the data:")

        button_column = st.columns(3)
        button_info = st.empty()

        # Your existing button logic goes here...

    # Your existing sample questions logic goes here...

if __name__ == "__main__":
    main()
